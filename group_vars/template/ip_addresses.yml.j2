#jinja2: trim_blocks:True, lstrip_blocks: True
---
ip_addresses:
{% for server_info in relevant_servers_info | sort(attribute='name') %}
  {{ server_info.name }}:
  {% for network_id in server_info.addresses | default([]) | sort %}
    {%if server_info.addresses[network_id] | selectattr('OS-EXT-IPS:type', 'equalto', 'fixed') | map(attribute='addr') | first is defined %}
    {{ network_id }}:
      address: {{ server_info.addresses[network_id] | selectattr('OS-EXT-IPS:type', 'equalto', 'fixed') | map(attribute='addr') | first }}
      netmask: /32
      {% if server_info.addresses[network_id] | selectattr('OS-EXT-IPS:type', 'equalto', 'floating') | map(attribute='addr') | first is defined %}
      publicly_exposed: true  # This internal IP is linked to a public (floating) IP.
        {% set floating_ip = server_info.addresses[network_id]
                             | selectattr('OS-EXT-IPS:type', 'equalto', 'floating')
                             | map(attribute='addr')
                             | first %}
        {% set floating_network_id = api_fip_info.floating_ips
                                     | selectattr('floating_ip_address', 'equalto', floating_ip)
                                     | map(attribute='floating_network_id')
                                     | first %}
        {% set dns_a_record = lookup('community.general.dig', floating_ip + '/PTR')
                              | regex_replace('\.$', '') %}
        {% if dns_a_record == 'NXDOMAIN' %}
          {% set fqdn = dns_a_record %}
        {% elif stack_domain is defined and stack_domain | length >= 1 and stack_domain in dns_a_record %}
          {% set fqdn = dns_a_record %}
        {% else %}
          {% set fqdn = 'WARNING: Check manually for DNS CNAME records a.k.a. aliases: we cannot reverse lookup an alias automagically.' %}
        {% endif %}
    {{ api_network_info.networks | selectattr('id', 'equalto', floating_network_id) | map(attribute='name') | first }}:
      address: {{ server_info.addresses[network_id] | selectattr('OS-EXT-IPS:type', 'equalto', 'floating') | map(attribute='addr') | first }}
      netmask: /32
      fqdn: '{{ fqdn }}'
      {% endif %}
    {% endif %}
  {% endfor %}
{% endfor %}
{% for stack_network in stack_networks
   | selectattr('router_network', 'defined')
   | sort(attribute='name') %}
  {% set router_name = 'Router bridging ' + stack_network.router_network + ' and ' + stack_network.name %}
  {{ stack_network.name }}-{{ stack_network.router_network }}-router:
    {{ stack_network.name }}:
      address: {{ stack_network.gateway }}
      netmask: /32
    {{ stack_network.router_network }}:
      address: {{ api_router_info['routers']
                  | selectattr('name', 'equalto', router_name)
                  | map(attribute='external_gateway_info')
                  | map (attribute='external_fixed_ips')
                  | first
                  | map (attribute='ip_address')
                  | first }}
      netmask: /32
      fqdn: 'NXDOMAIN'
{% endfor %}
...
