---
#
# Python CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-python/ for more details.
#
version: 2.1
jobs:
  build:
    docker:
      - image: cimg/python:3.10
    working_directory: ~/repo
    resource_class: small
    steps:
      - checkout
      - run: python --version
      - run: pip --version
      - run:
          name: install dependencies
          command: |
            openstacksdk_major_version='1'
            python -m venv openstacksdk-${openstacksdk_major_version:-1}.venv
            source openstacksdk-${openstacksdk_major_version:-1}.venv/bin/activate
            export ANSIBLE_ROLES_PATH="${VIRTUAL_ENV}/ansible/ansible_roles/:"
            export ANSIBLE_COLLECTIONS_PATH="${VIRTUAL_ENV}/ansible/:"
            pip install jmespath
            pip install ansible
            pip install ansible-lint
            attempt=1
            until [[ "${attempt}" -gt 3 ]]; do
              [[ "${attempt}" -gt 1 ]] && sleep 30
              ansible-galaxy install -r requirements-${openstacksdk_major_version:-1}.yml --timeout 120 && status="${?}" && break
              attempt=$((attempt+1))
            done
            if [[ "${status}" -ne 0 ]]; then
              exit "${status}"
            fi
            ansible --version
            ansible-lint --version
      - run:
          name: run tests
          shell: /bin/bash
          command: |
            set -e
            set -u
            set -o pipefail
            source openstacksdk-${openstacksdk_major_version:-1}.venv/bin/activate
            export ANSIBLE_ROLES_PATH="${VIRTUAL_ENV}/ansible/ansible_roles/:"
            export ANSIBLE_COLLECTIONS_PATH="${VIRTUAL_ENV}/ansible/:"
            if ansible-lint -p --nocolor --offline *.yml > lint_results 2>&1; then
              lint_errors=0
            else
              cat lint_results
              #
              # Parse number of errors from:
              # Finished with [0-9][0-9]* failure(s), [0-9][0-9]* warning(s) on [0-9][0-9]* files
              #
              lint_status=$(grep '^Finished with' lint_results)
              lint_errors=$(echo "${lint_status}" | sed 's|^Finished with \([0-9][0-9]*\) failure.*|\1|')
            fi
            echo '###############################################'
            printf 'Counted %d ansible-lint error(s).\n' ${lint_errors}
            echo '###############################################'
            if (( ${lint_errors} > 0 )); then /bin/false; fi
...
