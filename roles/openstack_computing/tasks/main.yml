#
# Create network ports, volumes and finally instances a.k.a. servers.
#
---
#
# Get networks and routers from API.
#
# Note: we fetch info for all networks and reouters relevant or not
# as filtering directly during the API call is problematic.
# Will filter the results for the relevant info later on.
#
- name: Get info on networks from OpenStack API.
  openstack.cloud.networks_info:
  register: api_network_info
  run_once: true
- name: Get info on routers from OpenStack API.
  openstack.cloud.routers_info:
  register: api_router_info
  run_once: true
#
# Create the servers.
#
- name: Create network ports, volumes and servers.
  ansible.builtin.include_tasks:
    file: servers.yml
  when:
    - hostvars[inventory_hostname]['cloud_flavor'] is defined
#
# Get IPs addresses from API for static hostname lookup with /etc/hosts.
#
# Note: we fetch info for all servers relevant or not
# as filtering directly during the API call is problematic.
# Will filter the results for the relevant servers later on.
#
- name: Get info on floating IPs from OpenStack API.
  openstack.cloud.floating_ip_info:
  register: api_fip_info
  run_once: true
- name: Get server info from OpenStack API.
  openstack.cloud.server_info:
  register: api_server_info
  run_once: true
- name: Rename old "openstack_networks" dict key to new "networks" dict key for backwards compatibility.
  ansible.builtin.set_fact:
    api_network_info: "{{ api_network_info | combine({'networks': api_network_info['openstack_networks']}) }}"
  when: api_network_info['openstack_networks'] is defined
  run_once: true
- name: Rename old "openstack_routers" dict key to new "routers" dict key for backwards compatibility.
  ansible.builtin.set_fact:
    api_router_info: "{{ api_router_info | combine({'routers': api_router_info['openstack_routers']}) }}"
  when: api_router_info['openstack_routers'] is defined
  run_once: true
- name: Rename old "openstack_servers" dict key to new "servers" dict key for backwards compatibility.
  ansible.builtin.set_fact:
    api_server_info: "{{ api_server_info | combine({'servers': api_server_info['openstack_servers']}) }}"
  when: api_server_info['openstack_servers'] is defined
  run_once: true
- name: "Add IP addresses to {{ playbook_dir }}/group_vars/{{ stack_name }}/ip_addresses.yml.new"
  ansible.builtin.template:
    src: "{{ playbook_dir }}/group_vars/template/ip_addresses.yml.j2"
    dest: "{{ playbook_dir }}/group_vars/{{ stack_name }}/ip_addresses.yml.new"
    mode: '0644'
  vars:
    relevant_servers_info: "{{ api_server_info.servers | selectattr('name', 'in', stack_hosts_created_in_openstack) | list }}"
  run_once: true
- name: "Create {{ playbook_dir }}/group_vars/{{ stack_name }}/ssh_client_settings.yml.new"
  ansible.builtin.template:
    src: "{{ playbook_dir }}/group_vars/template/ssh_client_settings.yml.j2"
    dest: "{{ playbook_dir }}/group_vars/{{ stack_name }}/ssh_client_settings.yml.new"
    mode: '0644'
  run_once: true
- name: "ToDo"
  ansible.builtin.debug:
    msg: |
         ***********************************************************************************************************
         IMPORTANT: Manual work!
                    Ansible created:
                        {{ playbook_dir }}/group_vars/{{ stack_name }}/ip_addresses.yml.new
                        {{ playbook_dir }}/group_vars/{{ stack_name }}/ssh_client_settings.yml.new
                    Please inspect these files carefully with:
                        diff -y {{ playbook_dir }}/group_vars/{{ stack_name }}/ip_addresses.yml{.new,}
                        diff -y {{ playbook_dir }}/group_vars/{{ stack_name }}/ssh_client_settings.yml{.new,}
                    and if both are Ok execute:
                        mv {{ playbook_dir }}/group_vars/{{ stack_name }}/ip_addresses.yml{.new,}
                        mv {{ playbook_dir }}/group_vars/{{ stack_name }}/ssh_client_settings.yml{.new,}
         ***********************************************************************************************************
  run_once: true
  failed_when: true  # Make sure to always interrupt any playbook here.
...
