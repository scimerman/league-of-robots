---
- name: 'Create cron job to restart systemd-logind regularly as workaround for known DBus bug.'
  ansible.builtin.cron:
    #
    # Silly workaround for bug in interaction dbus <-> logind
    # Need DBus 1.11.10 for a fix, but CentOS 7.6 is stuck on dbus 1.10.24.
    #
    name: 'Restart systemd-logind'
    minute: '*/10'
    user: root
    job: '/bin/systemctl restart systemd-logind'
    cron_file: restart_logind
  when:
    - ansible_facts['os_family'] == "RedHat"
    - ansible_facts['distribution_major_version'] <= "7"
  become: true

- name: 'Patch /etc/pam.d/sshd to allow logins from users in the admin group using ssh even when /etc/nologin is present.'
  ansible.builtin.lineinfile:
    path: '/etc/pam.d/sshd'
    insertbefore: '^account(\s+)required(\s+)pam_nologin.so'
    regexp: '^account(\s+)\[default=ignore(\s+)success=1\](\s+)pam_succeed_if.so(\s+)quiet(\s+)user(\s+)ingroup(\s+)admin'
    line: 'account    [default=ignore success=1] pam_succeed_if.so quiet user ingroup admin'
    owner: 'root'
    group: 'root'
    mode: '0644'
  become: true

- name: 'Set default umask 027 for all logins.'
  ansible.builtin.lineinfile:
    path: '/etc/login.defs'
    regexp: '^UMASK(\s+)'
    line: "UMASK\t\t027"
    owner: 'root'
    group: 'root'
    mode: '0644'
  when:
    - ansible_facts['os_family'] == "RedHat"
    - ansible_facts['distribution_major_version'] >= "8"
  become: true

- name: 'Install dependencies.'
  ansible.builtin.package:
    state: 'latest'
    update_cache: true
    name:
      - oddjob-mkhomedir
  notify:
    - authconfig_enable_mkhomedir
    - restart_oddjobd
  become: true

- name: 'Remove symlinks to disable deprecated pam_script.so: replaced with functionality from pam_exec.so.'
  ansible.builtin.file:  # noqa risky-file-permissions
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/pam_script_acct
    - /etc/pam_script_auth
    - /etc/pam_script_passwd
    - /etc/pam_script_ses_close
    - /etc/pam_script_ses_open
    - /etc/pam-script.d/login_checks_regular_home.sh_ses_open
    - /etc/pam-script.d/login_checks_chrooted_home.sh_ses_open
    - /etc/pam-script.d/set_quota.sh_ses_open
  become: true

- name: 'Create /etc/pam-script.d/ dir.'
  ansible.builtin.file:
    name: '/etc/pam-script.d'
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true

- name: 'Install login_checks_regular_home.sh script.'
  ansible.builtin.copy:
    src: login_checks_regular_home.sh
    dest: /etc/pam-script.d/login_checks_regular_home.sh
    owner: root
    group: root
    mode: '0755'
  when:
    - inventory_hostname in groups['jumphost'] | default([]) or
      inventory_hostname in groups['data_transfer'] | default([]) or
      inventory_hostname in groups['cluster'] | default([])
  become: true

- name: 'Install login_checks_chrooted_home.sh script.'
  ansible.builtin.template:
    src: login_checks_chrooted_home.sh
    dest: /etc/pam-script.d/login_checks_chrooted_home.sh
    owner: root
    group: root
    mode: '0755'
  when: inventory_hostname in groups['data_transfer'] | default([])
  become: true

- name: 'Install recycle-chrooted-home-for-expired-account.bash script in /root/.'
  ansible.builtin.template:
    src: recycle-chrooted-home-for-expired-account.bash
    dest: /root/recycle-chrooted-home-for-expired-account.bash
    owner: root
    group: root
    mode: '0750'
  when: inventory_hostname in groups['data_transfer'] | default([])
  become: true

- name: 'Create cron job to run recycle-chrooted-home-for-expired-account.bash script daily.'
  ansible.builtin.cron:
    name: 'Recycle chrooted home dirs for expired users in the {{ data_transfer_only_group }} group.'
    weekday: '*'
    hour: '05'
    minute: '30'
    user: root
    job: /root/recycle-chrooted-home-for-expired-account.bash -c
    cron_file: recycle-chrooted-home-for-expired-account
  when: inventory_hostname in groups['data_transfer'] | default([])
  become: true

- name: 'Set tiny quota for regular users on the XFS root partition.'
  ansible.builtin.include_tasks:
    file: tiny-user-quota-on-xfs-root-partition.yml
  when:
    - inventory_hostname in groups['jumphost'] | default([]) or
      inventory_hostname in groups['data_transfer'] | default([])
    - hostvars[inventory_hostname]['ansible_mounts'] | selectattr('mount', 'equalto', '/') | map(attribute='fstype') | first == 'xfs'

- name: 'Enable services.'
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
    daemon_reload: true
  with_items:
    - dbus.service
    - oddjobd.service
  notify:
    - restart_oddjobd
  become: true

- name: 'Update PAM stack with authconfig.'
  ansible.builtin.import_tasks: authconfig.yml
  when:
    - ansible_facts['os_family'] == "RedHat"
    - ansible_facts['distribution_major_version'] <= "7"

- name: 'Update PAM stack with authselect.'
  ansible.builtin.import_tasks: authselect.yml
  when:
    - ansible_facts['os_family'] == "RedHat"
    - ansible_facts['distribution_major_version'] >= "8"

- name: 'Update systemd default user presets.'
  ansible.builtin.import_tasks: systemd-user-preset.yml
  when:
    - ansible_facts['os_family'] == "RedHat"
    - ansible_facts['distribution_major_version'] >= "8"
...
