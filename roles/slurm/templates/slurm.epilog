#!/bin/bash

if [[ -z "${SLURM_JOB_ID}" ]]; then
    logger -s "WARN: SLURM_JOB_ID is empty or unset in SLURM epilog."
    exit 0
fi

#
# Cleanup job's private tmp dir.
#
TMPDIR="{{ slurm_local_scratch_dir }}/${SLURM_JOB_ID:-missing_SLURM_JOB_ID}/"
if [[ -e "${TMPDIR}" ]]; then
    rm -Rf "${TMPDIR}"
fi

#
# Append resource usage stats to job's *.out file if we have an STDOUT file.
# (STDOUT file will be absent for interactive sessions.)
#
SCONTROL_JOB_INFO="$(scontrol show job ${SLURM_JOB_ID})"
SLURM_JOB_STDOUT="$(printf '%s\n' "${SCONTROL_JOB_INFO}" | grep 'StdOut=' | sed 's/[[:space:]]*StdOut=//')"
SLURM_JOB_NODE="$(printf '%s\n' "${SCONTROL_JOB_INFO}" | grep 'BatchHost=' | sed 's/[[:space:]]*BatchHost=//')"
SLURM_JOB_STDOUT="$(echo "${SLURM_JOB_STDOUT}" | sed "s/%N/${SLURM_JOB_NODE}/")"
if [[ -w "${SLURM_JOB_STDOUT}" ]]; then
	sformat='JobId,Elapsed,AllocCPUs,AveCPU,ReqMem,MaxVMSize,MaxRSS,MaxDiskRead,MaxDiskWrite'
	echo '#################################################################################################################' >> "${SLURM_JOB_STDOUT}"
	echo '# Job details recorded by SLURM job epilog using sacct.                                                         #' >> "${SLURM_JOB_STDOUT}"
	echo '#################################################################################################################' >> "${SLURM_JOB_STDOUT}"
	echo "Resources consumed by job ${SLURM_JOB_ID} for user ${SLURM_JOB_USER} running on compute node ${SLURMD_NODENAME}:"  >> "${SLURM_JOB_STDOUT}"
	echo '================================================================================================================'  >> "${SLURM_JOB_STDOUT}"
	sacct -o "${sformat}" -p -j ${SLURM_JOB_ID}.batch | column -t -s '|'                                                     >> "${SLURM_JOB_STDOUT}" 2>&1
	echo '#################################################################################################################' >> "${SLURM_JOB_STDOUT}"
fi

exit 0
