$ModLoad imuxsock       # provides support for local system logging (e.g. via logger command)
$ModLoad imjournal      # provides access to the systemd journal

#### GLOBAL DIRECTIVES ####

# Where to place auxiliary files
$WorkDirectory /var/lib/rsyslog

# Use modern timestamp format - make logfiles similar to TraditionalFileFormat,
# both with high-precision timestamps and timezone information
$ActionFileDefaultTemplate RSYSLOG_FileFormat

# File syncing capability is disabled by default. This feature is usually not required,
# not useful and an extreme performance hit
#$ActionFileEnableSync on

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf

# Turn off message reception via local log socket;
# local messages are retrieved through imjournal now.
$OmitLocalLogging on

# File to store the position in the journal
$IMJournalStateFile imjournal.state



#### RULES ####

template(name="DynMessages" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/messages-%$DAY%")
template(name="DynSecure" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/secure-%$DAY%")
template(name="DynMaillog" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/maillog-%$DAY%")
template(name="DynCron" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/cron-%$DAY%")
template(name="DynSpooler" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/spooler-%$DAY%")
template(name="DynBootLog" type="string" string="/var/log/remote/%HOSTNAME%/%$YEAR%-%$MONTH%/boot.log-%$DAY%")

ruleset(name="remote_rule"){
    if prifilt("authpriv.*") then {
       action(type="omfile"  dynaFile="DynSecure" dirCreateMode="0700" fileCreateMode="0600" )
    } else if prifilt("mail.*") then {
       action(type="omfile"  dynaFile="DynMaillog" dirCreateMode="0700" fileCreateMode="0600" )
    } else if prifilt("cron.*") then {
       action(type="omfile"  dynaFile="DynCron" dirCreateMode="0700" fileCreateMode="0600" )
    } else if prifilt("uucp,news.crit") then {
       action(type="omfile"  dynaFile="DynSpooler" dirCreateMode="0700" fileCreateMode="0600" )
    } else if prifilt("local7.*") then {
       action(type="omfile"  dynaFile="DynBootLog" dirCreateMode="0700" fileCreateMode="0600" )
    } else {
       action(type="omfile"  dynaFile="DynMessages" dirCreateMode="0700" fileCreateMode="0600" )
    }
}

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
*.info;mail.none;authpriv.none;cron.none                /var/log/messages

# The authpriv file has restricted access.
authpriv.*                                              /var/log/secure

# Log all the mail messages in one place.
mail.*                                                  -/var/log/maillog

# Log cron stuff
cron.*                                                  /var/log/cron

# Everybody gets emergency messages
*.emerg                                                 :omusrmsg:*

# Save news errors of level crit and higher in a special file.
uucp,news.crit                                          /var/log/spooler

# Save boot messages also to boot.log
local7.*                                                /var/log/boot.log

#### INCOMING SERVER SETTINGS #### 

module(load="imrelp" ruleset="relp" tls.tlslib="openssl")

# configured with accordance of instructions from the
# https://www.rsyslog.com/doc/v8-stable/configuration/modules/imrelp.html
# - in 'name' authentication mode, certificate validation happens.
# - permitted peers are all peers that can communicate with correct certificate
# - compression turned on, reduces network load, while increases the CPU load
input(type="imrelp"
      ruleset="remote_rule"
      port="41514"
      tls="on"
      tls.tlscfgcmd="Protocol=ALL,-SSLv2,-SSLv3"    # Allow all protocols except for SSLv2 and SSLv3
      tls.cacert="{{ rsyslog_remote_path_cert_dir }}/logs_{{ logs_class }}.pem"
      tls.mycert="{{ rsyslog_remote_path_cert_dir }}/{{ inventory_hostname }}.pem"
      tls.myprivkey="{{ rsyslog_remote_path_key_dir }}/{{ inventory_hostname }}.key"
      tls.authMode="name"
      tls.permittedPeer=["*"] # any peer is allowd (as we limit connections with firewall)
      tls.compression="on"
      KeepAlive="on"          # check that the tcp session is still active, using OS default settings
)


