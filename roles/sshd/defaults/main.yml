---
#
# Resources:
#  - https://www.openssh.com/specs.html
#  - Technical Guideline TR-02102-4_ Cryptographic Mechanisms: Recommendations and Key Lengths â€“ Use of Secure Shell (SSH) Version: 2023-1
#    https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102/BSI-TR-02102-4.html
#  - https://infosec.mozilla.org/guidelines/openssh
# List versions supported by OpenSSH using:
#  - Ciphers: ssh -Q cipher
#  - Message Authentication Code (MAC) algorithms: ssh -Q mac
#  - Key EXchange (KEX) algorithms: ssh -Q kex
#  - Public key authentication algorithms: ssh -Q key
# Note 1: dict key - e.g. centos7 - must match with the value for os_distribution in group_vars/{{ stack_name }}/vars.yml
# Note 2: for Rocky >= 8 we follow system crypto policies and algorithms are no longer defined here.
# Note 3: Ciphers and MACs can be combined in multiple ways, but in theory only Encrypt-then-MAC (EtM) should be used.
#
sshd_algorithms:
  centos7:
    # Temporarily disable chacha20-poly1305@openssh.com due to Terrapin Attack: https://terrapin-attack.com
    # Vulnarable to Terrapin Attack are the chacha20-poly1305@openssh.com encryption algorithm and
    # any encryption algorithm suffixed -cbc in combination with any MAC algorithm suffixed -etm@openssh.com.
    # ciphers: chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    ciphers: aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    kexes: curve25519-sha256@libssh.org,curve25519-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256
    # Temporarily disable umac-128*@openssh.com due to bug in LibreSSL breaking the default Windows SSH client.
    # https://github.com/PowerShell/Win32-OpenSSH/issues/2078
    # macs: hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com
    macs: hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com
    keys: ssh-ed25519,ssh-ed25519-cert-v01@openssh.com,ssh-rsa,ssh-rsa-cert-v01@openssh.com
sshd_crypto_policies:
  oracle8:
    - DEFAULT
  rocky9:
    - CUSTOM
    - CVE-2023-48795 # Terrapin Attack: https://terrapin-attack.com/
sshd_moduli_minimum: 3072
data_transfer_only_group: sftp-only
#
# Reduce LoginGraceTime on machines with direct internet connection to increase security
# and reduce the number of opened but not yet authenticated connections consuming resources.
# When MFA authentication is enabled either with TOTPs or the SRAM PAM web-login plugin,
# users may need some extra time for the additional steps.
#
sshd_login_grace_time: "\
    {% if inventory_hostname in totp.machines | default([])
       or inventory_hostname in pam_weblogin.machines | default([]) %}\
        60\
    {% elif inventory_hostname in groups['jumphost'] | default([])
       or inventory_hostname in groups['data_transfer'] | default([]) %}\
        30\
    {% else %}\
        120 # default\
    {% endif %}"
#
# Increase MaxSessions for connection multiplexing on jumphosts.
# All sessions multiplexed over the same connection count as a single connection for MaxStartups.
# When MaxSessions is lower than the number of Ansible forks,
# you may start to see "randomly" dropped connections due to
#     MaxStartups start:rate:full
# which by default is 10:30:100.
# This means sshd starts to refuse connection attempts with a probability of "rate/100" (30%)
# when there are already "start" (10) unauthenticated connections.
# The probability increases linearly and all connection attempts are refused
# if the number of unauthenticated connections reaches "full" (100).
# See also https://bugs.launchpad.net/openstack-ansible/+bug/1479812
# A connection is no longer in unauthenticated state until
#   * either authentication succeeds
#   * or the LoginGraceTime expires and the connection is dropped.
# Therefore we also lower LoginGraceTime (see above) to reduce the amount of connections in unauthenticated state
# and hence lower the chance of hitting the MaxStartups limits.
#
sshd_max_sessions: "\
    {% if inventory_hostname in groups['jumphost'] | default([]) %}\
        {{ [10,
            (lookup('config', 'DEFAULT_FORKS') * 2),
            ([groups['cluster'] | length, 50] | min)]
           | max }}\
    {% else %}\
        10 # default\
    {% endif %}"
sshd_user_totp_config_path: "${HOME}/.ssh/totp"
...
