---
- name: Install iptables with yum.
  ansible.builtin.package:
    state: latest
    update_cache: true
    name:
      - 'iptables'
      - 'iptables-services'
      #### ToDo: fail2ban
  notify: restart_iptables
  become: true

- name: Enable netfilter kernel module for FTP connection tracking.
  ansible.builtin.lineinfile:
    path: '/etc/sysconfig/iptables-config'
    regexp: '^IPTABLES_MODULES='
    line: 'IPTABLES_MODULES="nf_conntrack_ftp"'
  notify:
    - restart_iptables
    - configure_iptables
  become: true

- name: Add kernel network tweaks to /etc/sysctl.d/60-ansible-managed-network.conf.
  ansible.posix.sysctl:
    sysctl_file: '/etc/sysctl.d/60-ansible-managed-network.conf'
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: true
    state: present
    reload: true
  loop: "{{ kernel_network_tweaks }}"
  become: true

- name: Create lists of public IP addresses.
  ansible.builtin.set_fact:
    public_ip_addresses: "{{ ansible_facts | dict2items
      | json_query('[*].value.ipv4.address')
      | map('ansible.utils.ipaddr', 'public') | list
      | reject('==', None) | list }}"

- name: Create lists of publicly exposed, private IP addresses.
  ansible.builtin.set_fact:
    publicly_exposed_internal_ip_addresses: "{{ all_ip_addresses[inventory_hostname] | dict2items
      | json_query('[?value.publicly_exposed].value.address')
      | list }}"

- name: Create lists of all publicly exposed IP addresses that need to be firewalled.
  ansible.builtin.set_fact:
    all_publicly_exposed_ip_addresses: "{{ public_ip_addresses | default([]) }} + {{ publicly_exposed_internal_ip_addresses | default([]) }}"

- name: Create lists of internal and external network interfaces.
  ansible.builtin.set_fact:
    internal_interfaces: "{{ ansible_facts | dict2items
      | selectattr('value.ipv4.address', 'defined')
      | rejectattr('value.ipv4.address', 'in', all_publicly_exposed_ip_addresses)
      | map(attribute='value.device') | list }}"
    external_interfaces: "{{ ansible_facts | dict2items
      | selectattr('value.ipv4.address', 'defined')
      | selectattr('value.ipv4.address', 'in', all_publicly_exposed_ip_addresses)
      | map(attribute='value.device') | list }}"

- name: List discovered IP addressess and network interfaces.
  ansible.builtin.debug:
    msg: |
         All publicly exposed IP addresses: {{ all_publicly_exposed_ip_addresses }}.
         Internal interfaces:  {{ internal_interfaces }}.
         External interfaces:  {{ external_interfaces }}.

- name: Deploy firewall configuration script.
  ansible.builtin.template:
    src: 'iptables-init.bash.j2'
    dest: '/etc/sysconfig/iptables-init.bash'
    owner: root
    group: root
    mode: '0700'
  notify: configure_iptables
  become: true

- name: Flush handlers for iptables role.
  ansible.builtin.meta: flush_handlers

- name: Configure the firewall service.
  ansible.builtin.service:
    name: "{{ item }}"
    state: 'started'
    enabled: 'yes'
    daemon_reload: 'yes'
  with_items:
    - 'iptables'
    - 'ip6tables'
  notify: configure_iptables
  become: true

- name: Flush handlers for iptables role.
  ansible.builtin.meta: flush_handlers

- name: Disable other firewalls.
  ansible.builtin.import_tasks: disable-other-firewalls.yml
  when: iptables_disable_firewalld
...
