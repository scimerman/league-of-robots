#jinja2: trim_blocks:True, lstrip_blocks: True
{% if inventory_hostname in groups['chaperone'] | default([]) %}
### /etc/hosts-LoR
#    - This file is generated next to /etc/hosts to provide a list of additional
#      hosts and their IP addresses.
#    - File is created on the machines that are not fully managed by
#      league-of-robots playbooks
#    - Used for establishing secure connection to trusted remote servers
{% else %}
### /etc/hosts
{% endif %}

### Generated automatically by Ansible
### with league-of-robots/roles/static_hostname_lookup role.
### Do NOT edit manually: changes will be lost!

#
# localhost
#
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4{% if groups['irods'] is defined and inventory_hostname in groups['irods'] %} {{ hostvars[inventory_hostname]['fqdn'] | regex_replace('\..*$', '')}}.localdomain{% endif +%}
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

#
# Stack {{ stack_name }} hosts.
#
{% set this_host_network_names = host_networks
    | default([])
    | map(attribute='name')
    | flatten
    | unique %}
{% for other_host in groups['all'] %}
  {% if hostvars[other_host]['host_networks'] is defined %}
    {% set other_host_network_names = hostvars[other_host]['host_networks']
        | map(attribute='name')
        | flatten
        | unique %}
    {% set first_joined_management_network_name = stack_networks
        | selectattr('type', 'equalto', 'management')
        | map(attribute='name')
        | intersect(this_host_network_names)
        | intersect(other_host_network_names)
        | first
        | default('none') %}
    {% for network in this_host_network_names %}
      {% if ip_addresses[other_host][network] is defined %}
        {% if network == first_joined_management_network_name and hostvars[other_host]['fqdn'] is defined %}
{{ "%-15s" | format(ip_addresses[other_host][network].address) }}    {{ hostvars[other_host]['fqdn'] }}    {{ hostvars[other_host]['fqdn'] | regex_replace('\..*$', '')}}    {{ other_host }}    {{ other_host }}_{{ network }}
        {% elif network == first_joined_management_network_name and hostvars[other_host]['fqdn'] is not defined %}
{{ "%-15s" | format(ip_addresses[other_host][network].address) }}    {{ other_host }}    {{ other_host }}_{{ network}}
        {% else %}
{{ "%-15s" | format(ip_addresses[other_host][network].address) }}    {{ other_host }}_{{ network}}
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endfor %}

{% if additional_etc_hosts is defined and additional_etc_hosts | length >= 1 %}
#
# Additional hosts.
#
  {% for item in additional_etc_hosts %}
    {% for node in item['nodes'] %}
      {% set address = lookup('vars', item['group'])['ip_addresses'][node['name']][node['network']]['address'] %}
{{ "%-15s" | format(address) }}    {{ node['name'] }}
    {% endfor %}
  {% endfor %}
{% endif %}

{% if logs_server_public_networks is defined and logs_server_public_networks | length >= 1 %}
#
# Log servers.
#
  {% for logs_class in logs_server_public_networks %}
      {% for item in logs_server_public_networks[logs_class] %}
{{ "%-15s" | format(all_ip_addresses[item['name']][item['network']].address) }}    {{ item['name'] }}       # {{ logs_class }}
      {% endfor %}
  {% endfor %}
{% endif %}
