#
# No mounts configured here: already handled by systemd
#
#mount {
#	cpuset	= /cgroup/cpuset;
#	cpu	= /cgroup/cpu;
#	#cpuacct	= /cgroup/cpuacct;
#	memory	= /cgroup/memory;
#	#devices	= /cgroup/devices;
#	#freezer	= /cgroup/freezer;
#	#net_cls	= /cgroup/net_cls;
#	#blkio	= /cgroup/blkio;
#}

#
# We do create limits for a group of users here as systemd cannot handle groups yet:
# systemd only handles per user limits or a limit for all users,
# but that would include daemons, admins, etc. too,
# which is not what we want.
#
group regular_users {
	cpu {
		cpu.shares=100;
	}
	cpuset {
		cpuset.cpus={% if cgroups_cpuset_max_core_number | int > 0 %}1{% else %}0{% endif %}-{% if cgroups_cpuset_max_core_number | int > 2 %}{{ cgroups_cpuset_max_core_number | int - 1 }}{% else %}{{ cgroups_cpuset_max_core_number}}{% endif %};
		cpuset.mems={{ cgroups_cpuset_mems_range }};
	}
	memory {
		memory.limit_in_bytes={{ cgroups_regular_users_mem_limit_hard }}G;
		memory.soft_limit_in_bytes={{ cgroups_regular_users_mem_limit_soft }}G;
		memory.memsw.limit_in_bytes={{ cgroups_regular_users_mem_limit_hard }}G;
	}
}

#
# We do not use limits for individual users (yet).
# If required in the future, consider handling that via systemd.
#
#template regular_users/%U {
#	cpu {
#		cpu.shares=100;
#	}
#	cpuset {
#		cpuset.cpus={% if cgroups_cpuset_max_core_number | int > 0 %}1{% else %}0{% endif %}-{% if cgroups_cpuset_max_core_number | int > 2 %}{{ cgroups_cpuset_max_core_number | int - 1 }}{% else %}{{ cgroups_cpuset_max_core_number}}{% endif %};
#		cpuset.mems={{ cgroups_cpuset_mems_range }};
#	}
#	memory {
#		memory.limit_in_bytes=4G;
#		memory.soft_limit_in_bytes=2G;
#		memory.memsw.limit_in_bytes=6G;
#	}
#}
